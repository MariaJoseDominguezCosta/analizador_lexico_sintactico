
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUMINUSDIVIDE ELSE EQUALS FALSE FLOAT FOR ID IF INT LBRACE LPAREN MINUS NUMBER PLUS PLUSPLUS PRINT1 PRINT2 PRINT3 PUNTO RBRACE RELOP RPAREN SEMICOLON STRING STRING_TYPE TIMES WHILEprogram : statement_liststatement_list : statement\n    | statement_list statementstatement : declaration\n                | for_statement\n                | assignment\n                | print\n                | blockfor_statement : FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACEfor_declaration : declaration\n                    | ID EQUALS expression SEMICOLONdeclaration : type ID EQUALS expression SEMICOLON\n    | type ID SEMICOLONtype : INT\n            | FLOAT\n            | STRING_TYPEexpression : expression PLUS expression\n                | expression MINUS expression\n                | expression TIMES expression\n                | expression DIVIDE expression\n                | MINUS expression %prec UMINUS\n                | NUMBER\n                | ID\n                | ID PLUSPLUS\n                | ID RELOP expressionprint : PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLONstatement : IF LPAREN expression RPAREN LBRACE statement RBRACE\n                | IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACEstatement : WHILE LPAREN expression RPAREN LBRACE statement RBRACEassignment : ID EQUALS expression SEMICOLONblock : LBRACE statement RBRACE'
    
_lr_action_items = {'IF':([0,2,3,4,5,6,7,8,10,19,31,34,50,54,60,61,70,71,75,77,81,83,84,],[9,9,-2,-4,-5,-6,-7,-8,9,-3,-31,-13,-30,9,9,-12,-27,-29,9,9,-9,-28,-26,]),'WHILE':([0,2,3,4,5,6,7,8,10,19,31,34,50,54,60,61,70,71,75,77,81,83,84,],[11,11,-2,-4,-5,-6,-7,-8,11,-3,-31,-13,-30,11,11,-12,-27,-29,11,11,-9,-28,-26,]),'FOR':([0,2,3,4,5,6,7,8,10,19,31,34,50,54,60,61,70,71,75,77,81,83,84,],[14,14,-2,-4,-5,-6,-7,-8,14,-3,-31,-13,-30,14,14,-12,-27,-29,14,14,-9,-28,-26,]),'ID':([0,2,3,4,5,6,7,8,10,12,16,17,18,19,20,22,24,25,28,31,33,34,36,37,41,42,43,44,47,50,52,54,60,61,62,68,70,71,75,76,77,81,83,84,],[13,13,-2,-4,-5,-6,-7,-8,13,23,-14,-15,-16,-3,30,30,30,38,30,-31,30,-13,30,-10,30,30,30,30,30,-30,30,13,13,-12,30,-11,-27,-29,13,30,13,-9,-28,-26,]),'PRINT1':([0,2,3,4,5,6,7,8,10,19,31,34,50,54,60,61,70,71,75,77,81,83,84,],[15,15,-2,-4,-5,-6,-7,-8,15,-3,-31,-13,-30,15,15,-12,-27,-29,15,15,-9,-28,-26,]),'LBRACE':([0,2,3,4,5,6,7,8,10,19,31,34,40,48,50,54,60,61,70,71,72,74,75,77,81,83,84,],[10,10,-2,-4,-5,-6,-7,-8,10,-3,-31,-13,54,60,-30,10,10,-12,-27,-29,75,77,10,10,-9,-28,-26,]),'INT':([0,2,3,4,5,6,7,8,10,19,25,31,34,50,54,60,61,70,71,75,77,81,83,84,],[16,16,-2,-4,-5,-6,-7,-8,16,-3,16,-31,-13,-30,16,16,-12,-27,-29,16,16,-9,-28,-26,]),'FLOAT':([0,2,3,4,5,6,7,8,10,19,25,31,34,50,54,60,61,70,71,75,77,81,83,84,],[17,17,-2,-4,-5,-6,-7,-8,17,-3,17,-31,-13,-30,17,17,-12,-27,-29,17,17,-9,-28,-26,]),'STRING_TYPE':([0,2,3,4,5,6,7,8,10,19,25,31,34,50,54,60,61,70,71,75,77,81,83,84,],[18,18,-2,-4,-5,-6,-7,-8,18,-3,18,-31,-13,-30,18,18,-12,-27,-29,18,18,-9,-28,-26,]),'$end':([1,2,3,4,5,6,7,8,19,31,34,50,61,70,71,81,83,84,],[0,-1,-2,-4,-5,-6,-7,-8,-3,-31,-13,-30,-12,-27,-29,-9,-28,-26,]),'RBRACE':([4,5,6,7,8,21,31,34,50,61,65,66,70,71,78,80,81,83,84,],[-4,-5,-6,-7,-8,31,-31,-13,-30,-12,70,71,-27,-29,81,83,-9,-28,-26,]),'LPAREN':([9,11,14,64,],[20,22,25,69,]),'EQUALS':([13,23,38,],[24,33,52,]),'PUNTO':([15,39,],[26,53,]),'MINUS':([20,22,24,27,28,29,30,32,33,34,35,36,37,41,42,43,44,45,46,47,49,51,52,55,56,57,58,59,61,62,63,67,68,76,79,],[28,28,28,42,28,-22,-23,42,28,-13,42,28,-10,28,28,28,28,-21,-24,28,42,42,28,-17,-18,-19,-20,42,-12,28,42,42,-11,28,42,]),'NUMBER':([20,22,24,28,33,34,36,37,41,42,43,44,47,52,61,62,68,76,],[29,29,29,29,29,-13,29,-10,29,29,29,29,29,29,-12,29,-11,29,]),'SEMICOLON':([23,29,30,35,45,46,49,51,55,56,57,58,59,63,82,],[34,-22,-23,50,-21,-24,61,62,-17,-18,-19,-20,-25,68,84,]),'PRINT2':([26,],[39,]),'RPAREN':([27,29,30,32,45,46,55,56,57,58,59,67,79,],[40,-22,-23,48,-21,-24,-17,-18,-19,-20,-25,72,82,]),'PLUS':([27,29,30,32,35,45,46,49,51,55,56,57,58,59,63,67,73,79,],[41,-22,-23,41,41,-21,-24,41,41,-17,-18,-19,-20,41,41,41,76,41,]),'TIMES':([27,29,30,32,35,45,46,49,51,55,56,57,58,59,63,67,79,],[43,-22,-23,43,43,-21,-24,43,43,43,43,-19,-20,43,43,43,43,]),'DIVIDE':([27,29,30,32,35,45,46,49,51,55,56,57,58,59,63,67,79,],[44,-22,-23,44,44,-21,-24,44,44,44,44,-19,-20,44,44,44,44,]),'PLUSPLUS':([30,],[46,]),'RELOP':([30,],[47,]),'PRINT3':([53,],[64,]),'STRING':([69,],[73,]),'ELSE':([70,],[74,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([0,],[2,]),'statement':([0,2,10,54,60,75,77,],[3,19,21,65,66,78,80,]),'declaration':([0,2,10,25,54,60,75,77,],[4,4,4,37,4,4,4,4,]),'for_statement':([0,2,10,54,60,75,77,],[5,5,5,5,5,5,5,]),'assignment':([0,2,10,54,60,75,77,],[6,6,6,6,6,6,6,]),'print':([0,2,10,54,60,75,77,],[7,7,7,7,7,7,7,]),'block':([0,2,10,54,60,75,77,],[8,8,8,8,8,8,8,]),'type':([0,2,10,25,54,60,75,77,],[12,12,12,12,12,12,12,12,]),'expression':([20,22,24,28,33,36,41,42,43,44,47,52,62,76,],[27,32,35,45,49,51,55,56,57,58,59,63,67,79,]),'for_declaration':([25,],[36,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statement_list','program',1,'p_program','parser_1.py',15),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parser_1.py',19),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parser_1.py',20),
  ('statement -> declaration','statement',1,'p_statement','parser_1.py',27),
  ('statement -> for_statement','statement',1,'p_statement','parser_1.py',28),
  ('statement -> assignment','statement',1,'p_statement','parser_1.py',29),
  ('statement -> print','statement',1,'p_statement','parser_1.py',30),
  ('statement -> block','statement',1,'p_statement','parser_1.py',31),
  ('for_statement -> FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE','for_statement',10,'p_statement_for','parser_1.py',34),
  ('for_declaration -> declaration','for_declaration',1,'p_for_declaration','parser_1.py',38),
  ('for_declaration -> ID EQUALS expression SEMICOLON','for_declaration',4,'p_for_declaration','parser_1.py',39),
  ('declaration -> type ID EQUALS expression SEMICOLON','declaration',5,'p_declaration','parser_1.py',44),
  ('declaration -> type ID SEMICOLON','declaration',3,'p_declaration','parser_1.py',45),
  ('type -> INT','type',1,'p_type','parser_1.py',60),
  ('type -> FLOAT','type',1,'p_type','parser_1.py',61),
  ('type -> STRING_TYPE','type',1,'p_type','parser_1.py',62),
  ('expression -> expression PLUS expression','expression',3,'p_expression','parser_1.py',66),
  ('expression -> expression MINUS expression','expression',3,'p_expression','parser_1.py',67),
  ('expression -> expression TIMES expression','expression',3,'p_expression','parser_1.py',68),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression','parser_1.py',69),
  ('expression -> MINUS expression','expression',2,'p_expression','parser_1.py',70),
  ('expression -> NUMBER','expression',1,'p_expression','parser_1.py',71),
  ('expression -> ID','expression',1,'p_expression','parser_1.py',72),
  ('expression -> ID PLUSPLUS','expression',2,'p_expression','parser_1.py',73),
  ('expression -> ID RELOP expression','expression',3,'p_expression','parser_1.py',74),
  ('print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON','print',11,'p_statement_print','parser_1.py',99),
  ('statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE','statement',7,'p_statement_if','parser_1.py',103),
  ('statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE','statement',11,'p_statement_if','parser_1.py',104),
  ('statement -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE','statement',7,'p_statement_while','parser_1.py',111),
  ('assignment -> ID EQUALS expression SEMICOLON','assignment',4,'p_statement_assign','parser_1.py',115),
  ('block -> LBRACE statement RBRACE','block',3,'p_block','parser_1.py',123),
]
