Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    FALSE

Grammar

Rule 0     S' -> program
Rule 1     program -> statement_list
Rule 2     statement_list -> statement
Rule 3     statement_list -> statement_list statement
Rule 4     statement -> declaration
Rule 5     statement -> for_statement
Rule 6     statement -> assignment
Rule 7     statement -> print
Rule 8     statement -> block
Rule 9     for_statement -> FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE
Rule 10    for_declaration -> declaration
Rule 11    for_declaration -> ID EQUALS expression SEMICOLON
Rule 12    declaration -> type ID EQUALS expression SEMICOLON
Rule 13    declaration -> type ID SEMICOLON
Rule 14    type -> INT
Rule 15    type -> FLOAT
Rule 16    type -> STRING_TYPE
Rule 17    expression -> expression PLUS expression
Rule 18    expression -> expression MINUS expression
Rule 19    expression -> expression TIMES expression
Rule 20    expression -> expression DIVIDE expression
Rule 21    expression -> MINUS expression
Rule 22    expression -> NUMBER
Rule 23    expression -> ID
Rule 24    expression -> ID PLUSPLUS
Rule 25    expression -> ID RELOP expression
Rule 26    print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON
Rule 27    print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON
Rule 28    statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE
Rule 29    statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
Rule 30    statement -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE
Rule 31    assignment -> ID EQUALS expression SEMICOLON
Rule 32    block -> LBRACE statement RBRACE

Terminals, with rules where they appear

DIVIDE               : 20
ELSE                 : 29
EQUALS               : 11 12 31
FALSE                : 
FLOAT                : 15
FOR                  : 9
ID                   : 11 12 13 23 24 25 31
IF                   : 28 29
INT                  : 14
LBRACE               : 9 28 29 29 30 32
LPAREN               : 9 26 27 28 29 30
MINUS                : 18 21
NUMBER               : 22
PLUS                 : 17 26
PLUSPLUS             : 24
PRINT1               : 26 27
PRINT2               : 26 27
PRINT3               : 26 27
PUNTO                : 26 26 27 27
RBRACE               : 9 28 29 29 30 32
RELOP                : 25
RPAREN               : 9 26 27 28 29 30
SEMICOLON            : 9 11 12 13 26 27 31
STRING               : 26
STRING_TYPE          : 16
TIMES                : 19
WHILE                : 30
error                : 

Nonterminals, with rules where they appear

assignment           : 6
block                : 8
declaration          : 4 10
expression           : 9 9 11 12 17 17 18 18 19 19 20 20 21 25 26 27 28 29 30 31
for_declaration      : 9
for_statement        : 5
print                : 7
program              : 0
statement            : 2 3 9 28 29 29 30 32
statement_list       : 1 3
type                 : 12 13

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . statement_list
    (2) statement_list -> . statement
    (3) statement_list -> . statement_list statement
    (4) statement -> . declaration
    (5) statement -> . for_statement
    (6) statement -> . assignment
    (7) statement -> . print
    (8) statement -> . block
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statement RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (30) statement -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (12) declaration -> . type ID EQUALS expression SEMICOLON
    (13) declaration -> . type ID SEMICOLON
    (9) for_statement -> . FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE
    (31) assignment -> . ID EQUALS expression SEMICOLON
    (26) print -> . PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON
    (27) print -> . PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON
    (32) block -> . LBRACE statement RBRACE
    (14) type -> . INT
    (15) type -> . FLOAT
    (16) type -> . STRING_TYPE

    IF              shift and go to state 9
    WHILE           shift and go to state 11
    FOR             shift and go to state 14
    ID              shift and go to state 13
    PRINT1          shift and go to state 15
    LBRACE          shift and go to state 10
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    STRING_TYPE     shift and go to state 18

    program                        shift and go to state 1
    statement_list                 shift and go to state 2
    statement                      shift and go to state 3
    declaration                    shift and go to state 4
    for_statement                  shift and go to state 5
    assignment                     shift and go to state 6
    print                          shift and go to state 7
    block                          shift and go to state 8
    type                           shift and go to state 12

state 1

    (0) S' -> program .



state 2

    (1) program -> statement_list .
    (3) statement_list -> statement_list . statement
    (4) statement -> . declaration
    (5) statement -> . for_statement
    (6) statement -> . assignment
    (7) statement -> . print
    (8) statement -> . block
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statement RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (30) statement -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (12) declaration -> . type ID EQUALS expression SEMICOLON
    (13) declaration -> . type ID SEMICOLON
    (9) for_statement -> . FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE
    (31) assignment -> . ID EQUALS expression SEMICOLON
    (26) print -> . PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON
    (27) print -> . PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON
    (32) block -> . LBRACE statement RBRACE
    (14) type -> . INT
    (15) type -> . FLOAT
    (16) type -> . STRING_TYPE

    $end            reduce using rule 1 (program -> statement_list .)
    IF              shift and go to state 9
    WHILE           shift and go to state 11
    FOR             shift and go to state 14
    ID              shift and go to state 13
    PRINT1          shift and go to state 15
    LBRACE          shift and go to state 10
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    STRING_TYPE     shift and go to state 18

    statement                      shift and go to state 19
    declaration                    shift and go to state 4
    for_statement                  shift and go to state 5
    assignment                     shift and go to state 6
    print                          shift and go to state 7
    block                          shift and go to state 8
    type                           shift and go to state 12

state 3

    (2) statement_list -> statement .

    IF              reduce using rule 2 (statement_list -> statement .)
    WHILE           reduce using rule 2 (statement_list -> statement .)
    FOR             reduce using rule 2 (statement_list -> statement .)
    ID              reduce using rule 2 (statement_list -> statement .)
    PRINT1          reduce using rule 2 (statement_list -> statement .)
    LBRACE          reduce using rule 2 (statement_list -> statement .)
    INT             reduce using rule 2 (statement_list -> statement .)
    FLOAT           reduce using rule 2 (statement_list -> statement .)
    STRING_TYPE     reduce using rule 2 (statement_list -> statement .)
    $end            reduce using rule 2 (statement_list -> statement .)


state 4

    (4) statement -> declaration .

    IF              reduce using rule 4 (statement -> declaration .)
    WHILE           reduce using rule 4 (statement -> declaration .)
    FOR             reduce using rule 4 (statement -> declaration .)
    ID              reduce using rule 4 (statement -> declaration .)
    PRINT1          reduce using rule 4 (statement -> declaration .)
    LBRACE          reduce using rule 4 (statement -> declaration .)
    INT             reduce using rule 4 (statement -> declaration .)
    FLOAT           reduce using rule 4 (statement -> declaration .)
    STRING_TYPE     reduce using rule 4 (statement -> declaration .)
    $end            reduce using rule 4 (statement -> declaration .)
    RBRACE          reduce using rule 4 (statement -> declaration .)


state 5

    (5) statement -> for_statement .

    IF              reduce using rule 5 (statement -> for_statement .)
    WHILE           reduce using rule 5 (statement -> for_statement .)
    FOR             reduce using rule 5 (statement -> for_statement .)
    ID              reduce using rule 5 (statement -> for_statement .)
    PRINT1          reduce using rule 5 (statement -> for_statement .)
    LBRACE          reduce using rule 5 (statement -> for_statement .)
    INT             reduce using rule 5 (statement -> for_statement .)
    FLOAT           reduce using rule 5 (statement -> for_statement .)
    STRING_TYPE     reduce using rule 5 (statement -> for_statement .)
    $end            reduce using rule 5 (statement -> for_statement .)
    RBRACE          reduce using rule 5 (statement -> for_statement .)


state 6

    (6) statement -> assignment .

    IF              reduce using rule 6 (statement -> assignment .)
    WHILE           reduce using rule 6 (statement -> assignment .)
    FOR             reduce using rule 6 (statement -> assignment .)
    ID              reduce using rule 6 (statement -> assignment .)
    PRINT1          reduce using rule 6 (statement -> assignment .)
    LBRACE          reduce using rule 6 (statement -> assignment .)
    INT             reduce using rule 6 (statement -> assignment .)
    FLOAT           reduce using rule 6 (statement -> assignment .)
    STRING_TYPE     reduce using rule 6 (statement -> assignment .)
    $end            reduce using rule 6 (statement -> assignment .)
    RBRACE          reduce using rule 6 (statement -> assignment .)


state 7

    (7) statement -> print .

    IF              reduce using rule 7 (statement -> print .)
    WHILE           reduce using rule 7 (statement -> print .)
    FOR             reduce using rule 7 (statement -> print .)
    ID              reduce using rule 7 (statement -> print .)
    PRINT1          reduce using rule 7 (statement -> print .)
    LBRACE          reduce using rule 7 (statement -> print .)
    INT             reduce using rule 7 (statement -> print .)
    FLOAT           reduce using rule 7 (statement -> print .)
    STRING_TYPE     reduce using rule 7 (statement -> print .)
    $end            reduce using rule 7 (statement -> print .)
    RBRACE          reduce using rule 7 (statement -> print .)


state 8

    (8) statement -> block .

    IF              reduce using rule 8 (statement -> block .)
    WHILE           reduce using rule 8 (statement -> block .)
    FOR             reduce using rule 8 (statement -> block .)
    ID              reduce using rule 8 (statement -> block .)
    PRINT1          reduce using rule 8 (statement -> block .)
    LBRACE          reduce using rule 8 (statement -> block .)
    INT             reduce using rule 8 (statement -> block .)
    FLOAT           reduce using rule 8 (statement -> block .)
    STRING_TYPE     reduce using rule 8 (statement -> block .)
    $end            reduce using rule 8 (statement -> block .)
    RBRACE          reduce using rule 8 (statement -> block .)


state 9

    (28) statement -> IF . LPAREN expression RPAREN LBRACE statement RBRACE
    (29) statement -> IF . LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE

    LPAREN          shift and go to state 20


state 10

    (32) block -> LBRACE . statement RBRACE
    (4) statement -> . declaration
    (5) statement -> . for_statement
    (6) statement -> . assignment
    (7) statement -> . print
    (8) statement -> . block
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statement RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (30) statement -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (12) declaration -> . type ID EQUALS expression SEMICOLON
    (13) declaration -> . type ID SEMICOLON
    (9) for_statement -> . FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE
    (31) assignment -> . ID EQUALS expression SEMICOLON
    (26) print -> . PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON
    (27) print -> . PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON
    (32) block -> . LBRACE statement RBRACE
    (14) type -> . INT
    (15) type -> . FLOAT
    (16) type -> . STRING_TYPE

    IF              shift and go to state 9
    WHILE           shift and go to state 11
    FOR             shift and go to state 14
    ID              shift and go to state 13
    PRINT1          shift and go to state 15
    LBRACE          shift and go to state 10
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    STRING_TYPE     shift and go to state 18

    statement                      shift and go to state 21
    declaration                    shift and go to state 4
    for_statement                  shift and go to state 5
    assignment                     shift and go to state 6
    print                          shift and go to state 7
    block                          shift and go to state 8
    type                           shift and go to state 12

state 11

    (30) statement -> WHILE . LPAREN expression RPAREN LBRACE statement RBRACE

    LPAREN          shift and go to state 22


state 12

    (12) declaration -> type . ID EQUALS expression SEMICOLON
    (13) declaration -> type . ID SEMICOLON

    ID              shift and go to state 23


state 13

    (31) assignment -> ID . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 24


state 14

    (9) for_statement -> FOR . LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE

    LPAREN          shift and go to state 25


state 15

    (26) print -> PRINT1 . PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON
    (27) print -> PRINT1 . PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON

    PUNTO           shift and go to state 26


state 16

    (14) type -> INT .

    ID              reduce using rule 14 (type -> INT .)


state 17

    (15) type -> FLOAT .

    ID              reduce using rule 15 (type -> FLOAT .)


state 18

    (16) type -> STRING_TYPE .

    ID              reduce using rule 16 (type -> STRING_TYPE .)


state 19

    (3) statement_list -> statement_list statement .

    IF              reduce using rule 3 (statement_list -> statement_list statement .)
    WHILE           reduce using rule 3 (statement_list -> statement_list statement .)
    FOR             reduce using rule 3 (statement_list -> statement_list statement .)
    ID              reduce using rule 3 (statement_list -> statement_list statement .)
    PRINT1          reduce using rule 3 (statement_list -> statement_list statement .)
    LBRACE          reduce using rule 3 (statement_list -> statement_list statement .)
    INT             reduce using rule 3 (statement_list -> statement_list statement .)
    FLOAT           reduce using rule 3 (statement_list -> statement_list statement .)
    STRING_TYPE     reduce using rule 3 (statement_list -> statement_list statement .)
    $end            reduce using rule 3 (statement_list -> statement_list statement .)


state 20

    (28) statement -> IF LPAREN . expression RPAREN LBRACE statement RBRACE
    (29) statement -> IF LPAREN . expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (23) expression -> . ID
    (24) expression -> . ID PLUSPLUS
    (25) expression -> . ID RELOP expression

    MINUS           shift and go to state 28
    NUMBER          shift and go to state 29
    ID              shift and go to state 30

    expression                     shift and go to state 27

state 21

    (32) block -> LBRACE statement . RBRACE

    RBRACE          shift and go to state 31


state 22

    (30) statement -> WHILE LPAREN . expression RPAREN LBRACE statement RBRACE
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (23) expression -> . ID
    (24) expression -> . ID PLUSPLUS
    (25) expression -> . ID RELOP expression

    MINUS           shift and go to state 28
    NUMBER          shift and go to state 29
    ID              shift and go to state 30

    expression                     shift and go to state 32

state 23

    (12) declaration -> type ID . EQUALS expression SEMICOLON
    (13) declaration -> type ID . SEMICOLON

    EQUALS          shift and go to state 33
    SEMICOLON       shift and go to state 34


state 24

    (31) assignment -> ID EQUALS . expression SEMICOLON
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (23) expression -> . ID
    (24) expression -> . ID PLUSPLUS
    (25) expression -> . ID RELOP expression

    MINUS           shift and go to state 28
    NUMBER          shift and go to state 29
    ID              shift and go to state 30

    expression                     shift and go to state 35

state 25

    (9) for_statement -> FOR LPAREN . for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE
    (10) for_declaration -> . declaration
    (11) for_declaration -> . ID EQUALS expression SEMICOLON
    (12) declaration -> . type ID EQUALS expression SEMICOLON
    (13) declaration -> . type ID SEMICOLON
    (14) type -> . INT
    (15) type -> . FLOAT
    (16) type -> . STRING_TYPE

    ID              shift and go to state 38
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    STRING_TYPE     shift and go to state 18

    for_declaration                shift and go to state 36
    declaration                    shift and go to state 37
    type                           shift and go to state 12

state 26

    (26) print -> PRINT1 PUNTO . PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON
    (27) print -> PRINT1 PUNTO . PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON

    PRINT2          shift and go to state 39


state 27

    (28) statement -> IF LPAREN expression . RPAREN LBRACE statement RBRACE
    (29) statement -> IF LPAREN expression . RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 40
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 28

    (21) expression -> MINUS . expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (23) expression -> . ID
    (24) expression -> . ID PLUSPLUS
    (25) expression -> . ID RELOP expression

    MINUS           shift and go to state 28
    NUMBER          shift and go to state 29
    ID              shift and go to state 30

    expression                     shift and go to state 45

state 29

    (22) expression -> NUMBER .

    RPAREN          reduce using rule 22 (expression -> NUMBER .)
    PLUS            reduce using rule 22 (expression -> NUMBER .)
    MINUS           reduce using rule 22 (expression -> NUMBER .)
    TIMES           reduce using rule 22 (expression -> NUMBER .)
    DIVIDE          reduce using rule 22 (expression -> NUMBER .)
    SEMICOLON       reduce using rule 22 (expression -> NUMBER .)


state 30

    (23) expression -> ID .
    (24) expression -> ID . PLUSPLUS
    (25) expression -> ID . RELOP expression

    RPAREN          reduce using rule 23 (expression -> ID .)
    PLUS            reduce using rule 23 (expression -> ID .)
    MINUS           reduce using rule 23 (expression -> ID .)
    TIMES           reduce using rule 23 (expression -> ID .)
    DIVIDE          reduce using rule 23 (expression -> ID .)
    SEMICOLON       reduce using rule 23 (expression -> ID .)
    PLUSPLUS        shift and go to state 46
    RELOP           shift and go to state 47


state 31

    (32) block -> LBRACE statement RBRACE .

    IF              reduce using rule 32 (block -> LBRACE statement RBRACE .)
    WHILE           reduce using rule 32 (block -> LBRACE statement RBRACE .)
    FOR             reduce using rule 32 (block -> LBRACE statement RBRACE .)
    ID              reduce using rule 32 (block -> LBRACE statement RBRACE .)
    PRINT1          reduce using rule 32 (block -> LBRACE statement RBRACE .)
    LBRACE          reduce using rule 32 (block -> LBRACE statement RBRACE .)
    INT             reduce using rule 32 (block -> LBRACE statement RBRACE .)
    FLOAT           reduce using rule 32 (block -> LBRACE statement RBRACE .)
    STRING_TYPE     reduce using rule 32 (block -> LBRACE statement RBRACE .)
    $end            reduce using rule 32 (block -> LBRACE statement RBRACE .)
    RBRACE          reduce using rule 32 (block -> LBRACE statement RBRACE .)


state 32

    (30) statement -> WHILE LPAREN expression . RPAREN LBRACE statement RBRACE
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 48
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 33

    (12) declaration -> type ID EQUALS . expression SEMICOLON
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (23) expression -> . ID
    (24) expression -> . ID PLUSPLUS
    (25) expression -> . ID RELOP expression

    MINUS           shift and go to state 28
    NUMBER          shift and go to state 29
    ID              shift and go to state 30

    expression                     shift and go to state 49

state 34

    (13) declaration -> type ID SEMICOLON .

    IF              reduce using rule 13 (declaration -> type ID SEMICOLON .)
    WHILE           reduce using rule 13 (declaration -> type ID SEMICOLON .)
    FOR             reduce using rule 13 (declaration -> type ID SEMICOLON .)
    ID              reduce using rule 13 (declaration -> type ID SEMICOLON .)
    PRINT1          reduce using rule 13 (declaration -> type ID SEMICOLON .)
    LBRACE          reduce using rule 13 (declaration -> type ID SEMICOLON .)
    INT             reduce using rule 13 (declaration -> type ID SEMICOLON .)
    FLOAT           reduce using rule 13 (declaration -> type ID SEMICOLON .)
    STRING_TYPE     reduce using rule 13 (declaration -> type ID SEMICOLON .)
    $end            reduce using rule 13 (declaration -> type ID SEMICOLON .)
    RBRACE          reduce using rule 13 (declaration -> type ID SEMICOLON .)
    MINUS           reduce using rule 13 (declaration -> type ID SEMICOLON .)
    NUMBER          reduce using rule 13 (declaration -> type ID SEMICOLON .)


state 35

    (31) assignment -> ID EQUALS expression . SEMICOLON
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 50
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 36

    (9) for_statement -> FOR LPAREN for_declaration . expression SEMICOLON expression RPAREN LBRACE statement RBRACE
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (23) expression -> . ID
    (24) expression -> . ID PLUSPLUS
    (25) expression -> . ID RELOP expression

    MINUS           shift and go to state 28
    NUMBER          shift and go to state 29
    ID              shift and go to state 30

    expression                     shift and go to state 51

state 37

    (10) for_declaration -> declaration .

    MINUS           reduce using rule 10 (for_declaration -> declaration .)
    NUMBER          reduce using rule 10 (for_declaration -> declaration .)
    ID              reduce using rule 10 (for_declaration -> declaration .)


state 38

    (11) for_declaration -> ID . EQUALS expression SEMICOLON

    EQUALS          shift and go to state 52


state 39

    (26) print -> PRINT1 PUNTO PRINT2 . PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON
    (27) print -> PRINT1 PUNTO PRINT2 . PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON

    PUNTO           shift and go to state 53


state 40

    (28) statement -> IF LPAREN expression RPAREN . LBRACE statement RBRACE
    (29) statement -> IF LPAREN expression RPAREN . LBRACE statement RBRACE ELSE LBRACE statement RBRACE

    LBRACE          shift and go to state 54


state 41

    (17) expression -> expression PLUS . expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (23) expression -> . ID
    (24) expression -> . ID PLUSPLUS
    (25) expression -> . ID RELOP expression

    MINUS           shift and go to state 28
    NUMBER          shift and go to state 29
    ID              shift and go to state 30

    expression                     shift and go to state 55

state 42

    (18) expression -> expression MINUS . expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (23) expression -> . ID
    (24) expression -> . ID PLUSPLUS
    (25) expression -> . ID RELOP expression

    MINUS           shift and go to state 28
    NUMBER          shift and go to state 29
    ID              shift and go to state 30

    expression                     shift and go to state 56

state 43

    (19) expression -> expression TIMES . expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (23) expression -> . ID
    (24) expression -> . ID PLUSPLUS
    (25) expression -> . ID RELOP expression

    MINUS           shift and go to state 28
    NUMBER          shift and go to state 29
    ID              shift and go to state 30

    expression                     shift and go to state 57

state 44

    (20) expression -> expression DIVIDE . expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (23) expression -> . ID
    (24) expression -> . ID PLUSPLUS
    (25) expression -> . ID RELOP expression

    MINUS           shift and go to state 28
    NUMBER          shift and go to state 29
    ID              shift and go to state 30

    expression                     shift and go to state 58

state 45

    (21) expression -> MINUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 21 (expression -> MINUS expression .)
    PLUS            reduce using rule 21 (expression -> MINUS expression .)
    MINUS           reduce using rule 21 (expression -> MINUS expression .)
    TIMES           reduce using rule 21 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 21 (expression -> MINUS expression .)
    SEMICOLON       reduce using rule 21 (expression -> MINUS expression .)

  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]


state 46

    (24) expression -> ID PLUSPLUS .

    RPAREN          reduce using rule 24 (expression -> ID PLUSPLUS .)
    PLUS            reduce using rule 24 (expression -> ID PLUSPLUS .)
    MINUS           reduce using rule 24 (expression -> ID PLUSPLUS .)
    TIMES           reduce using rule 24 (expression -> ID PLUSPLUS .)
    DIVIDE          reduce using rule 24 (expression -> ID PLUSPLUS .)
    SEMICOLON       reduce using rule 24 (expression -> ID PLUSPLUS .)


state 47

    (25) expression -> ID RELOP . expression
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (23) expression -> . ID
    (24) expression -> . ID PLUSPLUS
    (25) expression -> . ID RELOP expression

    MINUS           shift and go to state 28
    NUMBER          shift and go to state 29
    ID              shift and go to state 30

    expression                     shift and go to state 59

state 48

    (30) statement -> WHILE LPAREN expression RPAREN . LBRACE statement RBRACE

    LBRACE          shift and go to state 60


state 49

    (12) declaration -> type ID EQUALS expression . SEMICOLON
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 61
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 50

    (31) assignment -> ID EQUALS expression SEMICOLON .

    IF              reduce using rule 31 (assignment -> ID EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 31 (assignment -> ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 31 (assignment -> ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 31 (assignment -> ID EQUALS expression SEMICOLON .)
    PRINT1          reduce using rule 31 (assignment -> ID EQUALS expression SEMICOLON .)
    LBRACE          reduce using rule 31 (assignment -> ID EQUALS expression SEMICOLON .)
    INT             reduce using rule 31 (assignment -> ID EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 31 (assignment -> ID EQUALS expression SEMICOLON .)
    STRING_TYPE     reduce using rule 31 (assignment -> ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 31 (assignment -> ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 31 (assignment -> ID EQUALS expression SEMICOLON .)


state 51

    (9) for_statement -> FOR LPAREN for_declaration expression . SEMICOLON expression RPAREN LBRACE statement RBRACE
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 62
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 52

    (11) for_declaration -> ID EQUALS . expression SEMICOLON
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (23) expression -> . ID
    (24) expression -> . ID PLUSPLUS
    (25) expression -> . ID RELOP expression

    MINUS           shift and go to state 28
    NUMBER          shift and go to state 29
    ID              shift and go to state 30

    expression                     shift and go to state 63

state 53

    (26) print -> PRINT1 PUNTO PRINT2 PUNTO . PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON
    (27) print -> PRINT1 PUNTO PRINT2 PUNTO . PRINT3 LPAREN expression RPAREN SEMICOLON

    PRINT3          shift and go to state 64


state 54

    (28) statement -> IF LPAREN expression RPAREN LBRACE . statement RBRACE
    (29) statement -> IF LPAREN expression RPAREN LBRACE . statement RBRACE ELSE LBRACE statement RBRACE
    (4) statement -> . declaration
    (5) statement -> . for_statement
    (6) statement -> . assignment
    (7) statement -> . print
    (8) statement -> . block
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statement RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (30) statement -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (12) declaration -> . type ID EQUALS expression SEMICOLON
    (13) declaration -> . type ID SEMICOLON
    (9) for_statement -> . FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE
    (31) assignment -> . ID EQUALS expression SEMICOLON
    (26) print -> . PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON
    (27) print -> . PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON
    (32) block -> . LBRACE statement RBRACE
    (14) type -> . INT
    (15) type -> . FLOAT
    (16) type -> . STRING_TYPE

    IF              shift and go to state 9
    WHILE           shift and go to state 11
    FOR             shift and go to state 14
    ID              shift and go to state 13
    PRINT1          shift and go to state 15
    LBRACE          shift and go to state 10
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    STRING_TYPE     shift and go to state 18

    statement                      shift and go to state 65
    declaration                    shift and go to state 4
    for_statement                  shift and go to state 5
    assignment                     shift and go to state 6
    print                          shift and go to state 7
    block                          shift and go to state 8
    type                           shift and go to state 12

state 55

    (17) expression -> expression PLUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 17 (expression -> expression PLUS expression .)
    PLUS            reduce using rule 17 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 17 (expression -> expression PLUS expression .)
    SEMICOLON       reduce using rule 17 (expression -> expression PLUS expression .)
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44

  ! TIMES           [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]


state 56

    (18) expression -> expression MINUS expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 18 (expression -> expression MINUS expression .)
    PLUS            reduce using rule 18 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 18 (expression -> expression MINUS expression .)
    SEMICOLON       reduce using rule 18 (expression -> expression MINUS expression .)
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44

  ! TIMES           [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 18 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]


state 57

    (19) expression -> expression TIMES expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 19 (expression -> expression TIMES expression .)
    PLUS            reduce using rule 19 (expression -> expression TIMES expression .)
    MINUS           reduce using rule 19 (expression -> expression TIMES expression .)
    TIMES           reduce using rule 19 (expression -> expression TIMES expression .)
    DIVIDE          reduce using rule 19 (expression -> expression TIMES expression .)
    SEMICOLON       reduce using rule 19 (expression -> expression TIMES expression .)

  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]


state 58

    (20) expression -> expression DIVIDE expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    RPAREN          reduce using rule 20 (expression -> expression DIVIDE expression .)
    PLUS            reduce using rule 20 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 20 (expression -> expression DIVIDE expression .)
    TIMES           reduce using rule 20 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 20 (expression -> expression DIVIDE expression .)
    SEMICOLON       reduce using rule 20 (expression -> expression DIVIDE expression .)

  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]


state 59

    (25) expression -> ID RELOP expression .
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for TIMES resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
    RPAREN          reduce using rule 25 (expression -> ID RELOP expression .)
    SEMICOLON       reduce using rule 25 (expression -> ID RELOP expression .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44

  ! PLUS            [ reduce using rule 25 (expression -> ID RELOP expression .) ]
  ! MINUS           [ reduce using rule 25 (expression -> ID RELOP expression .) ]
  ! TIMES           [ reduce using rule 25 (expression -> ID RELOP expression .) ]
  ! DIVIDE          [ reduce using rule 25 (expression -> ID RELOP expression .) ]


state 60

    (30) statement -> WHILE LPAREN expression RPAREN LBRACE . statement RBRACE
    (4) statement -> . declaration
    (5) statement -> . for_statement
    (6) statement -> . assignment
    (7) statement -> . print
    (8) statement -> . block
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statement RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (30) statement -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (12) declaration -> . type ID EQUALS expression SEMICOLON
    (13) declaration -> . type ID SEMICOLON
    (9) for_statement -> . FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE
    (31) assignment -> . ID EQUALS expression SEMICOLON
    (26) print -> . PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON
    (27) print -> . PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON
    (32) block -> . LBRACE statement RBRACE
    (14) type -> . INT
    (15) type -> . FLOAT
    (16) type -> . STRING_TYPE

    IF              shift and go to state 9
    WHILE           shift and go to state 11
    FOR             shift and go to state 14
    ID              shift and go to state 13
    PRINT1          shift and go to state 15
    LBRACE          shift and go to state 10
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    STRING_TYPE     shift and go to state 18

    statement                      shift and go to state 66
    declaration                    shift and go to state 4
    for_statement                  shift and go to state 5
    assignment                     shift and go to state 6
    print                          shift and go to state 7
    block                          shift and go to state 8
    type                           shift and go to state 12

state 61

    (12) declaration -> type ID EQUALS expression SEMICOLON .

    IF              reduce using rule 12 (declaration -> type ID EQUALS expression SEMICOLON .)
    WHILE           reduce using rule 12 (declaration -> type ID EQUALS expression SEMICOLON .)
    FOR             reduce using rule 12 (declaration -> type ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 12 (declaration -> type ID EQUALS expression SEMICOLON .)
    PRINT1          reduce using rule 12 (declaration -> type ID EQUALS expression SEMICOLON .)
    LBRACE          reduce using rule 12 (declaration -> type ID EQUALS expression SEMICOLON .)
    INT             reduce using rule 12 (declaration -> type ID EQUALS expression SEMICOLON .)
    FLOAT           reduce using rule 12 (declaration -> type ID EQUALS expression SEMICOLON .)
    STRING_TYPE     reduce using rule 12 (declaration -> type ID EQUALS expression SEMICOLON .)
    $end            reduce using rule 12 (declaration -> type ID EQUALS expression SEMICOLON .)
    RBRACE          reduce using rule 12 (declaration -> type ID EQUALS expression SEMICOLON .)
    MINUS           reduce using rule 12 (declaration -> type ID EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 12 (declaration -> type ID EQUALS expression SEMICOLON .)


state 62

    (9) for_statement -> FOR LPAREN for_declaration expression SEMICOLON . expression RPAREN LBRACE statement RBRACE
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (23) expression -> . ID
    (24) expression -> . ID PLUSPLUS
    (25) expression -> . ID RELOP expression

    MINUS           shift and go to state 28
    NUMBER          shift and go to state 29
    ID              shift and go to state 30

    expression                     shift and go to state 67

state 63

    (11) for_declaration -> ID EQUALS expression . SEMICOLON
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    SEMICOLON       shift and go to state 68
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 64

    (26) print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 . LPAREN STRING PLUS expression RPAREN SEMICOLON
    (27) print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 69


state 65

    (28) statement -> IF LPAREN expression RPAREN LBRACE statement . RBRACE
    (29) statement -> IF LPAREN expression RPAREN LBRACE statement . RBRACE ELSE LBRACE statement RBRACE

    RBRACE          shift and go to state 70


state 66

    (30) statement -> WHILE LPAREN expression RPAREN LBRACE statement . RBRACE

    RBRACE          shift and go to state 71


state 67

    (9) for_statement -> FOR LPAREN for_declaration expression SEMICOLON expression . RPAREN LBRACE statement RBRACE
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 72
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 68

    (11) for_declaration -> ID EQUALS expression SEMICOLON .

    MINUS           reduce using rule 11 (for_declaration -> ID EQUALS expression SEMICOLON .)
    NUMBER          reduce using rule 11 (for_declaration -> ID EQUALS expression SEMICOLON .)
    ID              reduce using rule 11 (for_declaration -> ID EQUALS expression SEMICOLON .)


state 69

    (26) print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN . STRING PLUS expression RPAREN SEMICOLON
    (27) print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN . expression RPAREN SEMICOLON
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (23) expression -> . ID
    (24) expression -> . ID PLUSPLUS
    (25) expression -> . ID RELOP expression

    STRING          shift and go to state 73
    MINUS           shift and go to state 28
    NUMBER          shift and go to state 29
    ID              shift and go to state 30

    expression                     shift and go to state 74

state 70

    (28) statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE .
    (29) statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE . ELSE LBRACE statement RBRACE

    IF              reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE .)
    WHILE           reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE .)
    FOR             reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE .)
    ID              reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE .)
    PRINT1          reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE .)
    LBRACE          reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE .)
    INT             reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE .)
    FLOAT           reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE .)
    STRING_TYPE     reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE .)
    $end            reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE .)
    RBRACE          reduce using rule 28 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE .)
    ELSE            shift and go to state 75


state 71

    (30) statement -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .

    IF              reduce using rule 30 (statement -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    WHILE           reduce using rule 30 (statement -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    FOR             reduce using rule 30 (statement -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    ID              reduce using rule 30 (statement -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    PRINT1          reduce using rule 30 (statement -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    LBRACE          reduce using rule 30 (statement -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    INT             reduce using rule 30 (statement -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    FLOAT           reduce using rule 30 (statement -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    STRING_TYPE     reduce using rule 30 (statement -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    $end            reduce using rule 30 (statement -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)
    RBRACE          reduce using rule 30 (statement -> WHILE LPAREN expression RPAREN LBRACE statement RBRACE .)


state 72

    (9) for_statement -> FOR LPAREN for_declaration expression SEMICOLON expression RPAREN . LBRACE statement RBRACE

    LBRACE          shift and go to state 76


state 73

    (26) print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING . PLUS expression RPAREN SEMICOLON

    PLUS            shift and go to state 77


state 74

    (27) print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression . RPAREN SEMICOLON
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 78
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 75

    (29) statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE . LBRACE statement RBRACE

    LBRACE          shift and go to state 79


state 76

    (9) for_statement -> FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE . statement RBRACE
    (4) statement -> . declaration
    (5) statement -> . for_statement
    (6) statement -> . assignment
    (7) statement -> . print
    (8) statement -> . block
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statement RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (30) statement -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (12) declaration -> . type ID EQUALS expression SEMICOLON
    (13) declaration -> . type ID SEMICOLON
    (9) for_statement -> . FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE
    (31) assignment -> . ID EQUALS expression SEMICOLON
    (26) print -> . PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON
    (27) print -> . PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON
    (32) block -> . LBRACE statement RBRACE
    (14) type -> . INT
    (15) type -> . FLOAT
    (16) type -> . STRING_TYPE

    IF              shift and go to state 9
    WHILE           shift and go to state 11
    FOR             shift and go to state 14
    ID              shift and go to state 13
    PRINT1          shift and go to state 15
    LBRACE          shift and go to state 10
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    STRING_TYPE     shift and go to state 18

    statement                      shift and go to state 80
    declaration                    shift and go to state 4
    for_statement                  shift and go to state 5
    assignment                     shift and go to state 6
    print                          shift and go to state 7
    block                          shift and go to state 8
    type                           shift and go to state 12

state 77

    (26) print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS . expression RPAREN SEMICOLON
    (17) expression -> . expression PLUS expression
    (18) expression -> . expression MINUS expression
    (19) expression -> . expression TIMES expression
    (20) expression -> . expression DIVIDE expression
    (21) expression -> . MINUS expression
    (22) expression -> . NUMBER
    (23) expression -> . ID
    (24) expression -> . ID PLUSPLUS
    (25) expression -> . ID RELOP expression

    MINUS           shift and go to state 28
    NUMBER          shift and go to state 29
    ID              shift and go to state 30

    expression                     shift and go to state 81

state 78

    (27) print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 82


state 79

    (29) statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE . statement RBRACE
    (4) statement -> . declaration
    (5) statement -> . for_statement
    (6) statement -> . assignment
    (7) statement -> . print
    (8) statement -> . block
    (28) statement -> . IF LPAREN expression RPAREN LBRACE statement RBRACE
    (29) statement -> . IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE
    (30) statement -> . WHILE LPAREN expression RPAREN LBRACE statement RBRACE
    (12) declaration -> . type ID EQUALS expression SEMICOLON
    (13) declaration -> . type ID SEMICOLON
    (9) for_statement -> . FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE
    (31) assignment -> . ID EQUALS expression SEMICOLON
    (26) print -> . PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON
    (27) print -> . PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON
    (32) block -> . LBRACE statement RBRACE
    (14) type -> . INT
    (15) type -> . FLOAT
    (16) type -> . STRING_TYPE

    IF              shift and go to state 9
    WHILE           shift and go to state 11
    FOR             shift and go to state 14
    ID              shift and go to state 13
    PRINT1          shift and go to state 15
    LBRACE          shift and go to state 10
    INT             shift and go to state 16
    FLOAT           shift and go to state 17
    STRING_TYPE     shift and go to state 18

    statement                      shift and go to state 83
    declaration                    shift and go to state 4
    for_statement                  shift and go to state 5
    assignment                     shift and go to state 6
    print                          shift and go to state 7
    block                          shift and go to state 8
    type                           shift and go to state 12

state 80

    (9) for_statement -> FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement . RBRACE

    RBRACE          shift and go to state 84


state 81

    (26) print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression . RPAREN SEMICOLON
    (17) expression -> expression . PLUS expression
    (18) expression -> expression . MINUS expression
    (19) expression -> expression . TIMES expression
    (20) expression -> expression . DIVIDE expression

    RPAREN          shift and go to state 85
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 82

    (27) print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON .

    IF              reduce using rule 27 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 27 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON .)
    FOR             reduce using rule 27 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 27 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON .)
    PRINT1          reduce using rule 27 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 27 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON .)
    INT             reduce using rule 27 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 27 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON .)
    STRING_TYPE     reduce using rule 27 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON .)
    $end            reduce using rule 27 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 27 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN expression RPAREN SEMICOLON .)


state 83

    (29) statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement . RBRACE

    RBRACE          shift and go to state 86


state 84

    (9) for_statement -> FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE .

    IF              reduce using rule 9 (for_statement -> FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE .)
    WHILE           reduce using rule 9 (for_statement -> FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE .)
    FOR             reduce using rule 9 (for_statement -> FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE .)
    ID              reduce using rule 9 (for_statement -> FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE .)
    PRINT1          reduce using rule 9 (for_statement -> FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE .)
    LBRACE          reduce using rule 9 (for_statement -> FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE .)
    INT             reduce using rule 9 (for_statement -> FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE .)
    FLOAT           reduce using rule 9 (for_statement -> FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE .)
    STRING_TYPE     reduce using rule 9 (for_statement -> FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE .)
    $end            reduce using rule 9 (for_statement -> FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE .)
    RBRACE          reduce using rule 9 (for_statement -> FOR LPAREN for_declaration expression SEMICOLON expression RPAREN LBRACE statement RBRACE .)


state 85

    (26) print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 87


state 86

    (29) statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .

    IF              reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    WHILE           reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    FOR             reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    ID              reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    PRINT1          reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    LBRACE          reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    INT             reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    FLOAT           reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    STRING_TYPE     reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    $end            reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)
    RBRACE          reduce using rule 29 (statement -> IF LPAREN expression RPAREN LBRACE statement RBRACE ELSE LBRACE statement RBRACE .)


state 87

    (26) print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON .

    IF              reduce using rule 26 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON .)
    WHILE           reduce using rule 26 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON .)
    FOR             reduce using rule 26 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON .)
    ID              reduce using rule 26 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON .)
    PRINT1          reduce using rule 26 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON .)
    LBRACE          reduce using rule 26 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON .)
    INT             reduce using rule 26 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON .)
    FLOAT           reduce using rule 26 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON .)
    STRING_TYPE     reduce using rule 26 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON .)
    $end            reduce using rule 26 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON .)
    RBRACE          reduce using rule 26 (print -> PRINT1 PUNTO PRINT2 PUNTO PRINT3 LPAREN STRING PLUS expression RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 59 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 59 resolved as shift
WARNING: shift/reduce conflict for TIMES in state 59 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 59 resolved as shift
